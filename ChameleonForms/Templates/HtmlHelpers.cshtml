@using System.Web.Mvc
@using Component.Config
@using Enums
@using Templates
@using Nancy.ViewEngines.Razor

@* Generator: MvcHelper *@

@* The @:'s are to stop compilation errors with the Razor engine due to unclosed HTML tags *@

@helper EndForm() {
@:    </form>
}

@helper BeginSection(Nancy.ViewEngines.Razor.IHtmlString title,  Nancy.ViewEngines.Razor.IHtmlString leadingHtml, HtmlAttributes htmlAttributes) {
@:    <fieldset@(htmlAttributes)>
@:        <legend>@title</legend>
@:        @leadingHtml
@:        <dl>
}
    
@helper BeginNestedSection(Nancy.ViewEngines.Razor.IHtmlString title,  Nancy.ViewEngines.Razor.IHtmlString leadingHtml, HtmlAttributes htmlAttributes)
{
@:            <dt>@title</dt>
@:            <dd>
@:                @leadingHtml
@:                <dl@(htmlAttributes)>
}

@helper EndSection() {
@:        </dl>
@:    </fieldset>
}

@helper EndNestedSection() {
@:                </dl>
@:            </dd>
}

@helper GetPrependedHtml(IReadonlyFieldConfiguration fieldConfiguration) {
    if (fieldConfiguration != null) {
        foreach (var html in fieldConfiguration.PrependedHtml) {@html}
    }
}

@helper GetAppendedHtml(IReadonlyFieldConfiguration fieldConfiguration) {
    if (fieldConfiguration != null) {
        foreach (var html in fieldConfiguration.AppendedHtml) {@html}
    }
}

@helper GetHint(IReadonlyFieldConfiguration fieldConfiguration) {
    if (fieldConfiguration != null && fieldConfiguration.Hint != null) {<div class="hint">@fieldConfiguration.Hint</div>}
}

@helper BeginFieldInternal(Nancy.ViewEngines.Razor.IHtmlString labelHtml,  Nancy.ViewEngines.Razor.IHtmlString elementHtml,  Nancy.ViewEngines.Razor.IHtmlString validationHtml, IReadonlyFieldConfiguration fieldConfiguration, ModelMetadata fieldMetadata) {
@:            <dt>@labelHtml@(new HtmlString(fieldMetadata != null && fieldMetadata.IsRequired ? " <em class=\"required\">*</em>" : ""))</dt>
@:            <dd>
@:                @GetPrependedHtml(fieldConfiguration)@elementHtml@GetAppendedHtml(fieldConfiguration)@GetHint(fieldConfiguration) @validationHtml
}

@helper Field(Nancy.ViewEngines.Razor.IHtmlString labelHtml,  Nancy.ViewEngines.Razor.IHtmlString elementHtml,  Nancy.ViewEngines.Razor.IHtmlString validationHtml, ModelMetadata fieldMetadata, IReadonlyFieldConfiguration fieldConfiguration) {
@BeginFieldInternal(labelHtml, elementHtml, validationHtml, fieldConfiguration, fieldMetadata)
@:            </dd>
}

@helper BeginField(Nancy.ViewEngines.Razor.IHtmlString labelHtml,  Nancy.ViewEngines.Razor.IHtmlString elementHtml,  Nancy.ViewEngines.Razor.IHtmlString validationHtml, ModelMetadata fieldMetadata, IReadonlyFieldConfiguration fieldConfiguration)
{
@BeginFieldInternal(labelHtml, elementHtml, validationHtml, fieldConfiguration, fieldMetadata)
@:                <dl>
}

@helper EndField() {
@:                </dl>
@:            </dd>
}

@helper BeginNavigation() {
@:        <div class="form_navigation">
}

@helper EndNavigation() {
@:        </div>
}

@helper BeginMessage(MessageType messageType,  Nancy.ViewEngines.Razor.IHtmlString heading) {
@:      <div class="@string.Format("{0}{1}", messageType.ToString().ToLower(), "_message")">
@:          <h3>@heading</h3>
@:          <div class="message">
}

@helper EndMessage() {
@:          </div>
@:      </div>
}

@helper MessageParagraph(Nancy.ViewEngines.Razor.IHtmlString paragraph) {
@:    <p>
@:        @paragraph
@:    </p>
}

@helper List(IEnumerable<Nancy.ViewEngines.Razor.IHtmlString> items) {
@:    <ul>
foreach(var i in items) {
@:        <li>@i</li>
}
@:    </ul>
}